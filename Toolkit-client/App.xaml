<Application x:Class="Toolkit_Client.ToolkitApp"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Toolkit_Client">
    <Application.Resources>

        <SolidColorBrush x:Key="WindowBackgroundColor" Color="#fafafa" />
        <SolidColorBrush x:Key="PrimaryColor" Color="#1070e0" />
        <SolidColorBrush x:Key="SecondaryColor" Color="#ffffff" />
        <SolidColorBrush x:Key="ButtonColor" Color="#428beb" />
        <SolidColorBrush x:Key="ButtonMouseOverColor" Color="#1070e0" />
        <SolidColorBrush x:Key="SelectionBrush" Color="#0051ba" />
        <SolidColorBrush x:Key="TextBoxColor" Color="#59afff" />

        <SolidColorBrush x:Key="ErrorColor" Color="#d1473d" />
        <SolidColorBrush x:Key="WarningColor" Color="#cc8635" />
        <SolidColorBrush x:Key="SuccessColor" Color="#2f9e2b" />

        <!-- TextBlock / HeaderTextBlock -->
        <Style TargetType="TextBlock" x:Key="HeaderTextBlock">
            <Setter Property="FontFamily" Value="OpenSans" />
            <Setter Property="FontSize" Value="32" />
            <Setter Property="Foreground" Value="{DynamicResource PrimaryColor}" />
            <Setter Property="Padding" Value="10,5,10,5" />
        </Style>

        <!-- TextBlock / SelectedHeaderTextBlock -->
        <Style TargetType="TextBlock" x:Key="SelectedHeaderTextBlock">
            <Setter Property="FontFamily" Value="OpenSans" />
            <Setter Property="FontSize" Value="32" />
            <Setter Property="Foreground" Value="{DynamicResource SecondaryColor}" />
            <Setter Property="Background" Value="{DynamicResource PrimaryColor}" />
            <Setter Property="Padding" Value="10,5,10,5" />
        </Style>

        <!-- Label -->
        <Style TargetType="Label">
            <Setter Property="FontFamily" Value="OpenSans" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="Foreground" Value="{DynamicResource SecondaryColor}" />
        </Style>

        <!-- Label / HeaderLabel -->
        <Style TargetType="Label" x:Key="HeaderLabel">
            <Setter Property="FontFamily" Value="OpenSans" />
            <Setter Property="FontSize" Value="56" />
            <Setter Property="Foreground" Value="{DynamicResource SecondaryColor}" />
        </Style>

        <!-- TextBlock / DefaultTextBlock -->
        <Style TargetType="TextBlock" x:Key="DefaultTextBlock">
            <Setter Property="FontFamily" Value="OpenSans" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="TextWrapping" Value="Wrap" />
            <Setter Property="VirtualizingPanel.VerticalAlignment" Value="Center" />
        </Style>

        <!-- TextBlock / DefaultTextBlock -->
        <Style TargetType="Hyperlink" x:Key="DefaultHyperlink">
            <Setter Property="FontFamily" Value="OpenSans" />
            <Setter Property="FontSize" Value="16" />
        </Style>

        <!-- TextBlock / BlueTextBlock -->
        <Style TargetType="TextBlock" x:Key="BlueTextBlock" BasedOn="{StaticResource DefaultTextBlock}">
            <Setter Property="Foreground" Value="{DynamicResource PrimaryColor}" />
        </Style>

        <!-- TextBlock / AccountHeaderTextBlock -->
        <Style TargetType="TextBlock" x:Key="AccountHeaderTextBlock" BasedOn="{StaticResource BlueTextBlock}">
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="TextAlignment" Value="Center" />
            <Setter Property="FontSize" Value="24" />
        </Style>

        <!-- Button / BlueButton -->
        <Style TargetType="Button" x:Key="BlueButton">
            <Setter Property="FontFamily" Value="OpenSans" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Background" Value="{DynamicResource ButtonColor}" />
            <Setter Property="BorderBrush" Value="{DynamicResource ButtonColor}" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter Margin="10,5,10,5" VerticalAlignment="Center" HorizontalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource ButtonMouseOverColor}" />
                </Trigger>
            </Style.Triggers>

        </Style>

        <!-- TextBox / BlueTextBox -->
        <Style TargetType="TextBox" x:Key="BlueTextBox">
            <Setter Property="FontFamily" Value="OpenSans" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Foreground" Value="{DynamicResource SecondaryColor}" />
            <Setter Property="Background" Value="{DynamicResource TextBoxColor}" />
            <Setter Property="BorderBrush" Value="{DynamicResource TextBoxColor}" />
            <Setter Property="SelectionBrush" Value="{DynamicResource SelectionBrush}" />
            <Setter Property="SelectionOpacity" Value="0.5" />
            <Setter Property="CaretBrush" Value="{DynamicResource SecondaryColor}" />
        </Style>

        <!-- PasswordBox / BluePasswordBox -->
        <Style TargetType="PasswordBox" x:Key="BluePasswordBox">
            <Setter Property="FontFamily" Value="OpenSans" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Foreground" Value="{DynamicResource SecondaryColor}" />
            <Setter Property="Background" Value="{DynamicResource TextBoxColor}" />
            <Setter Property="BorderBrush" Value="{DynamicResource TextBoxColor}" />
            <Setter Property="SelectionBrush" Value="{DynamicResource SelectionBrush}" />
            <Setter Property="SelectionOpacity" Value="0.5" />
            <!--Setter Property="CaretBrush" Value="#ffffff" /-->
            <Setter Property="CaretBrush" Value="{DynamicResource SecondaryColor}" />
        </Style>

        <!-- ComboBox / BlueComboBox -->
        <Style TargetType="ComboBox" x:Key="BlueComboBox">
            <Setter Property="FontFamily" Value="OpenSans" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Foreground" Value="{DynamicResource PrimaryColor}" />
            <Setter Property="Background" Value="{DynamicResource TextBoxColor}" />
            <Setter Property="BorderBrush" Value="{DynamicResource TextBoxColor}" />
        </Style>

        <!-- ListView / GamesListView -->
        <Style TargetType="ListView" x:Key="GamesListView">
            <Setter Property="Background" Value="#2d2d30" />
            <Setter Property="Foreground" Value="#2d2d30" />
            <Setter Property="BorderBrush" Value="#2d2d30" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <ItemsPresenter />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

        </Style>

        <!-- ListView / GamesImageListView -->
        <Style BasedOn="{StaticResource GamesListView}" TargetType="ListView" x:Key="GamesImageListView">
            <Setter Property="HorizontalContentAlignment" Value="Center" />

            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <WrapPanel Orientation="Horizontal" HorizontalAlignment="Left"></WrapPanel>
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>

            <Setter Property="ItemTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <Grid>
                            <StackPanel Orientation="Horizontal" Width="300">
                                <Rectangle Width="100" Height="50" Fill="Gray" />
                                <TextBlock Text="Adobe Flash Player" Margin="5" VerticalAlignment="Center" />
                            </StackPanel>
                        </Grid>
                    </DataTemplate>
                </Setter.Value>
            </Setter>

        </Style>

        <!-- CheckBox / BlueCheckBox -->
        <Style TargetType="CheckBox" x:Key="BlueCheckBox">
            <Setter Property="FontFamily" Value="OpenSans" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="Foreground" Value="{DynamicResource TextBoxColor}" />
            <Setter Property="Background" Value="{DynamicResource TextBoxColor}" />
            <Setter Property="BorderBrush" Value="{DynamicResource TextBoxColor}" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <Border 
                            x:Name="BoxBorder" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" 
                            Width="{Binding ElementName=BoxText, Path=FontSize}" 
                            Height="{Binding ElementName=BoxText, Path=FontSize}">
                            
                            <StackPanel Orientation="Horizontal">
                                <TextBlock x:Name="BoxText" Text="" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="{DynamicResource SecondaryColor}" />
                            </StackPanel>
                            
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="BoxBorder" Value="{DynamicResource PrimaryColor}" />
                            </Trigger>

                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Text" TargetName="BoxText" Value="✓" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

        </Style>

        <!-- Открыть страницу -->
        <GridViewColumn x:Key="BlueButtonColumn">
            <GridViewColumn.HeaderTemplate>
                <DataTemplate>
                    <TextBlock Text="" Style="{StaticResource BlueTextBlock}" />
                </DataTemplate>
            </GridViewColumn.HeaderTemplate>
            <GridViewColumn.CellTemplate>
                <DataTemplate>
                    <Button Style="{StaticResource BlueButton}">
                        <Image Source="../Resources/cart.png" Width="16" Height="16" />
                    </Button>
                </DataTemplate>
            </GridViewColumn.CellTemplate>
        </GridViewColumn>

        <DataTemplate x:Key="BlueDataHeader">
            <TextBlock Text="" Style="{StaticResource BlueTextBlock}" />
        </DataTemplate>

        <DataTemplate x:Key="BlueDataButton">
            <Button Style="{StaticResource BlueButton}">
                <Image Source="../Resources/cart.png" Width="16" Height="16" />
            </Button>
        </DataTemplate>

    </Application.Resources>
</Application>
